{"version":3,"file":"static/js/687.c95c2bbd.chunk.js","mappings":"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","sources":["components/Common/Table.tsx","components/Alert/AlertsList.tsx","components/Alert/AlertForm.tsx","mappers/AlertMapper.ts","services/alert.ts","utils/notify.tsx","containers/Alert/Alerts.tsx","pages/Alert/Alerts.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { Table as TableAnt, Button, Row, Col, Tooltip, Popconfirm } from 'antd';\nimport \"../../sass/table.scss\";\n\ninterface ITable {\n  title?: string;\n  columns: any[];\n  dataSource: any[];\n  addButtons: any[] | [];\n  addActions: any[] | [];\n  loading: boolean;\n  filterComponent?: React.ReactNode;\n}\n\nexport const Table = ({\n  title,\n  columns,\n  dataSource,\n  addButtons,\n  addActions,\n  loading,\n  filterComponent,\n}: ITable) => {\n  const columnsWithMore = [...columns];\n  if (addActions && addActions.length > 0) {\n    columnsWithMore.push({\n      title: 'Acciones',\n      key: '',\n      align: 'right',\n      width: 50 * ((addActions && addActions.length) || 0),\n      render: (value: any, record: any) =>\n        addActions &&\n        addActions.map((action, index) => (\n          <Tooltip key={`action-button-${index}-${record?.id || index}`} title={action.text}>\n            {' '}\n            {action.confirm ? (\n              <Popconfirm\n                title={action.confirm}\n                okText={action.okText || 'Ok'}\n                cancelText={action.cancelText || 'Cancel'}\n                placement=\"bottomRight\"\n                onConfirm={() => action.onClick(record)}\n              >\n                <Button\n                  type={action.type || 'ghost'}\n                  shape=\"circle\"\n                  icon={action.icon}\n                />\n              </Popconfirm>\n            ) : (\n              <Button\n                type={action.type || 'ghost'}\n                shape=\"circle\"\n                icon={action.icon}\n                onClick={() => action.onClick(record)}\n              />\n            )}\n          </Tooltip>\n        )),\n    });\n  }\n\n  return (\n    <>\n      <Row className=\"row-title\">\n        <Col>{title || ''}</Col>\n        <Col>\n          {addButtons &&\n            addButtons.map((buttonProps, index) => (\n              <Fragment key={`button-section-${index}`}>\n                <Button size=\"large\" type=\"primary\" {...buttonProps}>\n                  {buttonProps.text}\n                </Button>{' '}\n              </Fragment>\n            ))}\n        </Col>\n      </Row>\n      {filterComponent && <>{filterComponent}</>}\n      <TableAnt\n        scroll={{ x: true }}\n        columns={columnsWithMore}\n        dataSource={dataSource}\n        className=\"custom-table\"\n        loading={loading}\n      />\n    </>\n  );\n};\n","import { Table } from \"../Common/Table\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  UsergroupDeleteOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  DoubleRightOutlined\n} from '@ant-design/icons';\n\nconst AlertsList = ({\n  dataSource,\n  loading,\n  handleDelete,\n  handleVisibleForm\n}: any) => {\n  const navigate = useNavigate();\n  \n  const columns = [\n    {\n      title: 'Backend',\n      dataIndex: 'backend',\n      key: 'backend',\n      render: (text: any) => <a>{text}</a>,\n      sorter: (a: any, b: any) => {\n        const n = a.backend.toLocaleLowerCase().localeCompare(b.backend.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.backend.localeCompare(a.backend) : n;\n      },\n    },\n    {\n      title: 'Operation',\n      dataIndex: 'operation',\n      key: 'operation',\n      sorter: (a: any, b: any) => {\n        const n = a.operation.toLocaleLowerCase().localeCompare(b.operation.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.operation.localeCompare(a.operation) : n;\n      }\n    },\n    {\n      title: 'Number requests',\n      dataIndex: 'numberRequests',\n      key: 'numberRequests',\n      sorter: (a: any, b: any) => parseFloat(a.numberRequests) - parseFloat(b.numberRequests),\n    },\n    {\n      title: 'Timestamp',\n      key: 'timestamp',\n      dataIndex: 'timestamp',\n      sorter: (a: any, b: any) => {\n        const n = a.timestamp.toLocaleLowerCase().localeCompare(b.timestamp.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.timestamp.localeCompare(a.timestamp) : n;\n      },\n    }\n  ];\n\n  const onDelete = (id: string) => {\n    console.log('id == ', id)\n    handleDelete(id);\n  };\n\n  return (\n    <Table\n      title=\"Alertas\"\n      columns={columns}\n      dataSource={dataSource}\n      addButtons={[\n        {\n          text: 'Crear Alerta',\n          icon: <UsergroupDeleteOutlined />,\n          onClick: () => handleVisibleForm(),\n        },\n      ]}\n      addActions={[\n        {\n          text: 'Editar',\n          icon: <EditOutlined />,\n          type: 'primary',\n          onClick: (record: any) => {\n            handleVisibleForm(record);\n          }\n        },\n        {\n          text: 'Eliminar',\n          icon: <DeleteOutlined />,\n          type: 'danger',\n          okText: \"Ok\",\n          confirm: '¿Está seguro que desea eliminar esta alarma?',\n          onClick: (record: any) => onDelete(record._id),\n        },\n      ]}\n      loading={loading}\n    />\n  );\n};\n\nexport default AlertsList;\n","import React, { useEffect } from 'react';\nimport {\n  Form, Input, Row, Col, Modal, InputNumber, Select\n} from 'antd';\nimport { Alert } from '../../interfaces/Alert';\n\ninterface IAlertForm {\n  visible: boolean;\n  readonly: boolean;\n  title: string;\n  handleCancel: (e: React.MouseEvent<HTMLElement>) => void;\n  handleSubmit: Function;\n  alertSelect: Alert\n}\n\ninterface IOptionSelect {\n  id: string | number;\n  name: string;\n}\n\nconst { Option } = Select;\n\nconst AlertForm = ({\n  visible,\n  readonly,\n  title,\n  handleCancel,\n  handleSubmit,\n  alertSelect,\n}: IAlertForm) => {\n  const {\n    backend, numberRequests, operation, timestamp\n  } = alertSelect;\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (visible) {\n      form.setFieldsValue({\n        backend,\n        numberRequests: parseFloat(numberRequests),\n        operation,\n        timestamp\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  const getValueOperationAlert = (operation: string) => {\n    let operationAlert = \"\";\n    switch (operation) {\n      case \"W\":\n        operationAlert = \"warning\";\n        break;\n      case \"C\":\n        operationAlert = \"cutoff\";\n        break;\n      default:\n        operationAlert = \"recover\";\n        break;\n    }\n    return operationAlert;\n  };\n\n  const onOk = () => {\n    form.validateFields().then((values) => {\n      handleSubmit({\n        backend: values.backend,\n        numberRequests: values.numberRequests,\n      }, getValueOperationAlert(values.operation));\n    });\n  };\n\n  const handleCose = () => {\n    form.resetFields();\n  };\n\n  const formFullLayout = {\n    labelCol: { xxl: 8, xl: 9 },\n    wrapperCol: { xxl: 16, xl: 15 },\n  };\n\n  const operationOptions: IOptionSelect[] = [{\n    id: \"W\",\n    name: \"Warning\"\n  }, {\n    id: \"C\",\n    name: \"Cutoff\"\n  }, {\n    id: \"R\",\n    name: \"Recover\"\n  }];\n\n  const optionsBackend: IOptionSelect[] = [{\n    id: \"LMS\",\n    name: \"LMS\"\n  }, {\n    id: \"BDC\",\n    name: \"BDC\"\n  }, {\n    id: \"SSB\",\n    name: \"SSB\"\n  }, {\n    id: \"INFR\",\n    name: \"INFR\"\n  }, {\n    id: \"SCN\",\n    name: \"SCN\"\n  }, {\n    id: \"MS\",\n    name: \"MS\"\n  }, {\n    id: \"WCO\",\n    name: \"WCO\"\n  }, {\n    id: \"STL\",\n    name: \"STL\"\n  }];\n\n  return (\n    <Modal\n      visible={visible}\n      title={title}\n      okText=\"Aceptar\"\n      cancelText=\"Cancelar\"\n      onCancel={handleCancel}\n      onOk={onOk}\n      afterClose={handleCose}\n      closable={false}\n      maskClosable={false}\n      width=\"50%\"\n      className=\"custom-modal-plantsForm\"\n      forceRender\n      centered\n    >\n      <Form form={form}>\n        <Row gutter={8}>\n          <Col span={20}>\n            <Form.Item\n              label=\"Operation\"\n              name=\"operation\"\n              rules={[\n                { required: true, message: 'Operation must be required' }\n              ]}\n              {...formFullLayout}\n            >\n              <Select disabled={readonly}>\n                {operationOptions.map((item: IOptionSelect) =>\n                  <Option value={item.id}>{item.name}</Option>\n                )}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={8}>\n          <Col span={20}>\n            <Form.Item\n              label=\"Backend\"\n              name=\"backend\"\n              rules={[\n                { required: true, message: 'Backend must be required' }\n              ]}\n              {...formFullLayout}\n            >\n              <Select disabled={readonly}>\n                {optionsBackend.map((item: IOptionSelect) =>\n                  <Option value={item.id}>{item.name}</Option>\n                )}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={8}>\n          <Col span={20}>\n            <Form.Item\n              label=\"Number Requests\"\n              name=\"numberRequests\"\n              rules={[\n                { required: true, message: 'Number Requests must be required' }\n              ]}\n              {...formFullLayout}\n            >\n              <InputNumber\n                style={{ width: '100%' }}\n                disabled={readonly}\n                min={0}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        {alertSelect.backend !== \"\" && (\n          <Row gutter={8}>\n            <Col span={20}>\n              <Form.Item\n                label=\"Timestamp\"\n                name=\"timestamp\"\n                rules={[\n                  { required: true, message: 'Timestamp must be required' }\n                ]}\n                {...formFullLayout}\n              >\n                <Input disabled />\n              </Form.Item>\n            </Col>\n          </Row>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AlertForm;","import { Alert } from \"../interfaces/Alert\";\n\nexport class AlertMapper {\n  public static mapperAlert(data: any): Alert {\n    let option: Alert = null;\n    if (data) {\n      option = {\n        backend: data.backend || '',\n        numberRequests: data.numberRequests || '',\n        operation: data.operation || '',\n        timestamp: data.timestamp || '',\n      };\n    }\n    return option;\n  }\n\n  public static mapperAlerts(data: any): Alert[] {\n    return data.map((item: any) => {\n      return this.mapperAlert(item);\n    });\n  }\n\n}\n","import axios from \"axios\"\nimport { Alert } from \"../interfaces/Alert\";\nimport { AlertMapper } from \"../mappers/AlertMapper\";\n\nconst { REACT_APP_URL_BASE } = process.env;\n\nexport class AlertService {\n\n  public static getAlerts = async (token: string) => {\n    const url = `${REACT_APP_URL_BASE}/v0.1/agent/alerts`;\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json;odata=verbose\",\n      },\n    });\n    console.log(data);\n    debugger;\n    const companies: Alert[] = AlertMapper.mapperAlerts(data);\n    return companies;\n  }\n\n  public static saveAlert = async (token: string, data: Alert, operationAlert: string) => {\n    const url = `${REACT_APP_URL_BASE}/v0.1/agent/${operationAlert}`;\n    const { data: dataResponse } = await axios.post(url, data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json;odata=verbose\",\n      },\n    });\n    return dataResponse;\n  }\n}\n","import { notification } from 'antd';\nimport { NotificationPlacement, NotificationInstance } from 'antd/lib/notification';\n\ninterface INotify {\n  message: any;\n  description?: any;\n  type: string;\n  placement?: NotificationPlacement;\n  duration?: number;\n}\n\nconst notify = ({\n  message,\n  description,\n  type = 'info',\n  placement = 'topRight',\n  duration = 4.5,\n}: INotify) => notification[type as keyof NotificationInstance]({\n  description: typeof description === 'object' ? description : <div dangerouslySetInnerHTML={{ __html: description }} />,\n  message: typeof message === 'object' ? message : <div dangerouslySetInnerHTML={{ __html: message }} />,\n  placement,\n  duration\n});\n\nexport default notify;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Alert } from \"../../interfaces/Alert\";\nimport { AlertForm, AlertsList } from \"../../components\";\nimport AppContext from \"../../context/AppContext\";\nimport { AlertService } from \"../../services/alert\";\nimport { useAuth } from \"react-oauth2-pkce\";\nimport notify from \"../../utils/notify\";\n\n\nconst AlertsContainer = () => {\n  const { setDefaultMenu } = useContext(AppContext);\n  const { authService } = useAuth();\n  const token = authService.getAuthTokens();\n  const [loading, setLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [dataSource, setDataSource] = useState<Alert[] | []>([]);\n  const [titleFormAlert, setTitleFormAlert] = useState(\"\");\n  const emptyAlert = {\n    backend: \"\",\n    numberRequests: \"\",\n    operation: \"\",\n    timestamp: \"\"\n  };\n  const [alertSelect, setAlertSelect] = useState<Alert>(emptyAlert);\n\n  const getAlerts = async () => {\n    try {\n      setLoading(true);\n      const companies: Alert[] =\n        await AlertService.getAlerts(token?.access_token);\n      setDataSource(companies);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error('Error en getAlerts = ', error);\n    }\n  };\n\n  useEffect(() => {\n    if (setDefaultMenu) {\n      setDefaultMenu('alerts');\n    };\n    setLoading(true);\n    getAlerts();\n    /* setDataSource([{\n      backend: 'sf1/1',\n      numberRequests: '2',\n      operation: 'edit',\n      timestamp: '2021-01-01'\n    }, {\n      backend: 'sf1/2',\n      numberRequests: '3',\n      operation: 'delete',\n      timestamp: '2021-01-01'\n    }, {\n      backend: 'sf1/3',\n      numberRequests: '4',\n      operation: 'edit',\n      timestamp: '2021-01-01'\n    }, {\n      backend: 'sf1/4',\n      numberRequests: '5',\n      operation: 'read',\n      timestamp: '2021-01-01'\n    }]);\n    setTimeout(() => {\n      setLoading(false);\n    }, 5000); */\n  }, []);\n\n  const handleVisibleForm = (selectAlert?: Alert) => {\n    setTitleFormAlert(\"Crear alarma\");\n    setAlertSelect(emptyAlert);\n    if (selectAlert) {\n      setAlertSelect(selectAlert);\n      setTitleFormAlert(\"Editar alarma\");\n    }\n    setVisible(true);\n  };\n\n  const handleSubmit = async (values: Alert, operationAlert: string) => {\n    debugger;\n    try {\n      const response = await AlertService.saveAlert(token?.access_token, values, operationAlert);\n      console.log(response);\n      if (response && response.code === \"200\") {\n        notify({ type: 'success', message: response.message });\n        setVisible(false);\n        getAlerts();\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error('Error en saveAlert = ', error);\n    }\n  };\n\n  return (\n    <>\n    <AlertsList\n      dataSource={dataSource}\n      loading={loading}\n      handleDelete={() => { }}\n      handleVisibleForm={handleVisibleForm}\n    />\n    <AlertForm\n      title={titleFormAlert}\n      visible={visible}\n      handleCancel={() => setVisible(false)}\n      handleSubmit={handleSubmit}\n      readonly={false}\n      alertSelect={alertSelect}\n    />\n    </>\n  )\n};\n\nexport default AlertsContainer;\n","import { AlertsContainer } from \"../../containers\";\n\nconst AlertsPage = () => (\n  <AlertsContainer />\n);\n\nexport default AlertsPage;\n"],"names":["Table","title","columns","dataSource","addButtons","addActions","loading","filterComponent","columnsWithMore","length","push","key","align","width","render","value","record","map","action","index","text","confirm","okText","cancelText","placement","onConfirm","onClick","type","shape","icon","id","className","buttonProps","Fragment","size","scroll","x","handleDelete","handleVisibleForm","useNavigate","dataIndex","sorter","a","b","n","backend","toLocaleLowerCase","localeCompare","operation","parseFloat","numberRequests","timestamp","UsergroupDeleteOutlined","EditOutlined","DeleteOutlined","_id","console","log","Option","Select","visible","readonly","handleCancel","handleSubmit","alertSelect","Form","form","useEffect","setFieldsValue","formFullLayout","labelCol","xxl","xl","wrapperCol","onCancel","onOk","validateFields","then","values","operationAlert","getValueOperationAlert","afterClose","resetFields","closable","maskClosable","forceRender","centered","gutter","span","label","name","rules","required","message","disabled","item","style","min","AlertMapper","data","option","mapperAlert","REACT_APP_URL_BASE","process","AlertService","getAlerts","token","url","axios","headers","Authorization","Accept","companies","mapperAlerts","saveAlert","dataResponse","description","duration","notification","dangerouslySetInnerHTML","__html","setDefaultMenu","useContext","AppContext","useAuth","authService","getAuthTokens","useState","setLoading","setVisible","setDataSource","titleFormAlert","setTitleFormAlert","emptyAlert","setAlertSelect","access_token","error","response","code","notify","selectAlert","Alerts"],"sourceRoot":""}