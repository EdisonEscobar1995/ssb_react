{"version":3,"file":"static/js/393.39a54fd3.chunk.js","mappings":"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","sources":["components/Common/Table.tsx","components/Company/Companies.tsx","mappers/CompanyMapper.ts","services/company.ts","containers/Company/Companies.tsx","pages/Company/Companies.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { Table as TableAnt, Button, Row, Col, Tooltip, Popconfirm } from 'antd';\nimport \"../../sass/table.scss\";\n\ninterface ITable {\n  title?: string;\n  columns: any[];\n  dataSource: any[];\n  addButtons: any[] | [];\n  addActions: any[] | [];\n  loading: boolean;\n  filterComponent?: React.ReactNode;\n}\n\nexport const Table = ({\n  title,\n  columns,\n  dataSource,\n  addButtons,\n  addActions,\n  loading,\n  filterComponent,\n}: ITable) => {\n  const columnsWithMore = [...columns];\n  if (addActions && addActions.length > 0) {\n    columnsWithMore.push({\n      title: 'Acciones',\n      key: '',\n      align: 'right',\n      width: 50 * ((addActions && addActions.length) || 0),\n      render: (value: any, record: any) =>\n        addActions &&\n        addActions.map((action, index) => (\n          <Tooltip key={`action-button-${index}-${record?.id || index}`} title={action.text}>\n            {' '}\n            {action.confirm ? (\n              <Popconfirm\n                title={action.confirm}\n                okText={action.okText || 'Ok'}\n                cancelText={action.cancelText || 'Cancel'}\n                placement=\"bottomRight\"\n                onConfirm={() => action.onClick(record)}\n              >\n                <Button\n                  type={action.type || 'ghost'}\n                  shape=\"circle\"\n                  icon={action.icon}\n                />\n              </Popconfirm>\n            ) : (\n              <Button\n                type={action.type || 'ghost'}\n                shape=\"circle\"\n                icon={action.icon}\n                onClick={() => action.onClick(record)}\n              />\n            )}\n          </Tooltip>\n        )),\n    });\n  }\n\n  return (\n    <>\n      <Row className=\"row-title\">\n        <Col>{title || ''}</Col>\n        <Col>\n          {addButtons &&\n            addButtons.map((buttonProps, index) => (\n              <Fragment key={`button-section-${index}`}>\n                <Button size=\"large\" type=\"primary\" {...buttonProps}>\n                  {buttonProps.text}\n                </Button>{' '}\n              </Fragment>\n            ))}\n        </Col>\n      </Row>\n      {filterComponent && <>{filterComponent}</>}\n      <TableAnt\n        scroll={{ x: true }}\n        columns={columnsWithMore}\n        dataSource={dataSource}\n        className=\"custom-table\"\n        loading={loading}\n      />\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { Table } from \"../Common/Table\";\nimport { Row, Col, Select } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  UsergroupDeleteOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  DoubleRightOutlined\n} from '@ant-design/icons';\nimport { Company } from \"../../interfaces/Company\";\nimport '../../sass/company.scss';\n\nconst { Option } = Select;\n\ninterface ICompaniesProps {\n  dataSource: Company[] | [];\n  loading: boolean;\n  handleDelete: Function;\n  dataCountries: string[] | [];\n  handleChangeFilter: Function;\n  filterValue: string;\n}\n\nconst Companies = ({\n  dataSource,\n  loading,\n  handleDelete,\n  dataCountries,\n  handleChangeFilter,\n  filterValue\n}: ICompaniesProps) => {\n  const navigate = useNavigate();\n  \n  const columns = [\n    {\n      title: 'Id empresa',\n      dataIndex: 'id',\n      key: 'id',\n      filters: [{}],\n      render: (text: any) => <a>{text}</a>,\n      sorter: (a: any, b: any) => {\n        const n = a.id.toLocaleLowerCase().localeCompare(b.id.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.id.localeCompare(a.id) : n;\n      },\n    },\n    {\n      title: 'Descripción',\n      dataIndex: 'description',\n      key: 'description',\n      sorter: (a: any, b: any) => {\n        const n = a.description.toLocaleLowerCase().localeCompare(b.description.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.description.localeCompare(a.description) : n;\n      }\n    },\n    {\n      title: 'Id País',\n      dataIndex: 'idCountry',\n      key: 'idCountry',\n      sorter: (a: any, b: any) => {\n        const n = a.idCountry.toLocaleLowerCase().localeCompare(b.idCountry.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.idCountry.localeCompare(a.idCountry) : n;\n      },\n    },\n    {\n      title: 'Parámetro Empresa',\n      key: 'param',\n      dataIndex: 'param',\n      sorter: (a: any, b: any) => {\n        const n = a.param.toLocaleLowerCase().localeCompare(b.param.toLocaleLowerCase());\n        return n === 0 && a !== b ? b.param.localeCompare(a.param) : n;\n      },\n    }\n  ];\n\n  const onDelete = (id: string) => {\n    console.log('id == ', id)\n    handleDelete(id);\n  };\n\n  const FilterComponent = () => (\n    <Row className=\"filter-companies\">\n      <Col span={2}>\n        <b>Id País: </b>\n      </Col>\n      <Col span={10}>\n        <Select\n          allowClear\n          showSearch\n          defaultValue={filterValue}\n          onChange={(value) => handleChangeFilter(value)}\n          style={{ width: '100%' }}\n        >\n          {dataCountries.map((item, index) =>\n            <Option key={`opt-${index}-${item}`} value={item}>{item}</Option>\n          )}\n        </Select>\n      </Col>\n    </Row>\n  );\n\n  return (\n    <Table\n      title=\"Compañias\"\n      columns={columns}\n      dataSource={dataSource}\n      filterComponent={<FilterComponent />}\n      addButtons={[\n        {\n          // text: 'Create QPR',\n          // icon: <UsergroupDeleteOutlined />,\n          // onClick: () => navigate(\"form\"),\n        },\n      ]}\n      addActions={[\n        {\n          text: 'Edit',\n          icon: <EditOutlined />,\n          type: 'primary',\n          onClick: (record: any) => {\n            navigate(`form/${record._id}`);\n          }\n        },\n        {\n          text: 'Delete',\n          icon: <DeleteOutlined />,\n          type: 'danger',\n          okText: \"Ok\",\n          confirm: 'Are you sure you want to delete this QPR?',\n          onClick: (record: any) => onDelete(record._id),\n        },\n      ]}\n      loading={loading}\n    />\n  );\n};\n\nexport default Companies;\n","import { Company } from \"../interfaces/Company\";\n\nexport class CompanyMapper {\n  public static mapperCompany(data: any): Company {\n    let option: Company = null;\n    if (data) {\n      option = {\n        id: data.refId,\n        param: data.param,\n        idCountry: data?.country?.refId || '',\n        description: data?.empresaDescription || '',\n        empresaCode: data.empresaCode || '',\n        order: data?.order || ''\n      };\n    }\n    return option;\n  }\n\n  public static mapperCompanies(data: any): Company[] {\n    return data.map((item: any) => {\n      return this.mapperCompany(item?.empresa);\n    });\n  }\n\n}\n","import axios from \"axios\"\nimport { Company } from \"../interfaces/Company\";\nimport { CompanyMapper } from \"../mappers/CompanyMapper\";\n\nconst { REACT_APP_URL_BASE } = process.env;\n\nexport class CompanyService {\n\n  public static getCompanies = async (token: string) => {\n    const url = `${REACT_APP_URL_BASE}/sif/v3/empresas`;\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json;odata=verbose\",\n      },\n    });\n    console.log(data);\n    const companies: Company[] = CompanyMapper.mapperCompanies(data.empresaList);\n    return companies;\n  }\n}","import { useContext, useEffect, useState } from \"react\";\nimport { Company } from \"../../interfaces/Company\";\nimport { Companies } from \"../../components\";\nimport AppContext from \"../../context/AppContext\";\nimport { CompanyService } from \"../../services/company\";\nimport { useAuth } from \"react-oauth2-pkce\";\n\n\nconst CompaniesContainer = () => {\n  const { setDefaultMenu } = useContext(AppContext);\n  const { authService } = useAuth();\n  const token = authService.getAuthTokens();\n  const [loading, setLoading] = useState(false);\n  const [dataSourceGlobal, setDataSourceGlobal] = useState<Company[] | []>([]);\n  const [dataSource, setDataSource] = useState<Company[] | []>([]);\n  const [countriesData, setCountriesData] = useState<string[] | []>([]);\n  const [filterValue, setFilterValue] = useState<string>(\"\");\n\n  const handleUniqueCountries = (dataCompanies: Company[]) => {\n    const countries: string[] = [];\n    dataCompanies.forEach((item) => {\n      if (countries.findIndex(element => element === item.idCountry) < 0) {\n        countries.push(item.idCountry);\n      }\n    });\n    console.log('countries == ', countries);\n    setCountriesData(countries);\n  };\n\n  const getCompanies = async () => {\n    try {\n      setLoading(true);\n      const companies: Company[] =\n        await CompanyService.getCompanies(token?.access_token);\n      setDataSource(companies);\n      setDataSourceGlobal(companies);\n      handleUniqueCountries(companies);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error('Error en getCompanies = ', error);\n    }\n  };\n\n  const handleChangeFilter = (value: string) => {\n    console.log(value);\n    setFilterValue(value);\n    let dataFilter = [...dataSourceGlobal];\n    if (value) {\n      dataFilter = dataSourceGlobal.filter(element => element.idCountry === value);\n    }\n    setDataSource(dataFilter);\n  };\n\n  useEffect(() => {\n    if (setDefaultMenu) {\n      setDefaultMenu('companies');\n    };\n    getCompanies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Companies\n      dataSource={dataSource}\n      loading={loading}\n      handleDelete={()=>{}}\n      dataCountries={countriesData}\n      handleChangeFilter={handleChangeFilter}\n      filterValue={filterValue}\n    />\n  )\n};\n\nexport default CompaniesContainer;\n","import { CompaniesContainer } from \"../../containers\";\n\nconst CompaniesPage = () => (\n  <CompaniesContainer />\n);\n\nexport default CompaniesPage;\n"],"names":["Table","title","columns","dataSource","addButtons","addActions","loading","filterComponent","columnsWithMore","length","push","key","align","width","render","value","record","map","action","index","text","confirm","okText","cancelText","placement","onConfirm","onClick","type","shape","icon","id","className","buttonProps","Fragment","size","scroll","x","Option","Select","handleDelete","dataCountries","handleChangeFilter","filterValue","navigate","useNavigate","dataIndex","filters","sorter","a","b","n","toLocaleLowerCase","localeCompare","description","idCountry","param","FilterComponent","span","allowClear","showSearch","defaultValue","onChange","style","item","EditOutlined","_id","DeleteOutlined","console","log","CompanyMapper","data","option","refId","country","empresaDescription","empresaCode","order","mapperCompany","empresa","CompanyService","getCompanies","token","url","process","axios","headers","Authorization","Accept","companies","mapperCompanies","empresaList","setDefaultMenu","useContext","AppContext","useAuth","authService","getAuthTokens","useState","setLoading","dataSourceGlobal","setDataSourceGlobal","setDataSource","countriesData","setCountriesData","setFilterValue","handleUniqueCountries","dataCompanies","countries","forEach","findIndex","element","access_token","error","useEffect","dataFilter","filter"],"sourceRoot":""}